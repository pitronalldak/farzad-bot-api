{"version":3,"sources":["../../../src/models/survey/index.js"],"names":["ObjectIdSchema","Schema","ObjectId","Types","SurveySchema","id","type","String","default","name","thankYou","isActive","Boolean","set","transform","doc","ret","_id","__v","Survey","model","SurveyModel","select","survey","create","criteria","update","remove","data"],"mappings":";;;;;;;;;AAAA;;;;AAEA;;;;;;;;AAEA,IAAMA,iBAAiB,mBAASC,MAAT,CAAgBC,QAAvC;AACA,IAAMA,WAAW,mBAASC,KAAT,CAAeD,QAAhC;;AAGA,IAAME,eAAe,IAAI,mBAASH,MAAb,CAAoB;AACrCI,QAAI,EAAEC,MAAMC,MAAR,EAAgBC,SAAS,EAAzB,EADiC;AAErCC,UAAM,EAAEH,MAAOC,MAAT,EAAiBC,SAAU,EAA3B,EAF+B;AAGrCE,cAAU,EAAEJ,MAAOC,MAAT,EAAiBC,SAAU,EAA3B,EAH2B;AAIrCG,cAAU,EAAEL,MAAOM,OAAT,EAAkBJ,SAAU,IAA5B;AAJ2B,CAApB,CAArB;;AAQAJ,aAAaS,GAAb,CAAiB,QAAjB,EAA2B;AACzBC,eAAW,mBAAUC,GAAV,EAAeC,GAAf,EAAoB;AAC7B,eAAOA,IAAIC,GAAX;AACA,eAAOD,IAAIE,GAAX;AACD;AAJwB,CAA3B;;AAOA,IAAMC,SAAS,mBAASC,KAAT,CAAe,QAAf,EAAyBhB,YAAzB,CAAf;;AAEA;;;;IAGqBiB,W;AACjB,2BAAc;AAAA;;AACZ,aAAKD,KAAL,GAAa,oBAAUD,MAAV,CAAb;AACD;;;;iCAEQ;AACL,mBAAO,KAAKC,KAAL,CAAWE,MAAX,CAAkB,EAAlB,CAAP;AACH;;;+BAEMC,M,EAAQ;AACX,mBAAO,KAAKH,KAAL,CAAWI,MAAX,CAAkBD,MAAlB,CAAP;AACH;;;+BAEMA,M,EAAQ;AACX,gBAAME,WAAW,EAACpB,IAAIkB,OAAOlB,EAAZ,EAAjB;AACA,mBAAOkB,OAAOlB,EAAd;;AAEA,gBAAMqB,SAASH,MAAf;AACA,mBAAO,KAAKH,KAAL,CAAWM,MAAX,CAAkBD,QAAlB,EAA4BC,MAA5B,CAAP;AACH;;;+BAEMrB,E,EAAI;AACP,gBAAMoB,WAAW,EAACpB,MAAD,EAAjB;AACA,mBAAO,KAAKe,KAAL,CAAWO,MAAX,CAAkBF,QAAlB,CAAP;AACH;;;iCAEQG,I,EAAM;AACX,gBAAMH,WAAW,EAACpB,IAAIuB,KAAKvB,EAAV,EAAjB;AACA,gBAAMqB,SAAS,EAACf,UAAUiB,KAAKjB,QAAhB,EAAf;AACA,mBAAO,KAAKS,KAAL,CAAWM,MAAX,CAAkBD,QAAlB,EAA4BC,MAA5B,CAAP;AACH;;;;;;kBA9BgBL,W","file":"index.js","sourcesContent":["import mongoose from 'mongoose';\n\nimport Model from '../model';\n\nconst ObjectIdSchema = mongoose.Schema.ObjectId;\nconst ObjectId = mongoose.Types.ObjectId;\n\n\nconst SurveySchema = new mongoose.Schema({\n    id: { type: String, default: '' },\n    name: { type : String, default : '' },\n    thankYou: { type : String, default : '' },\n    isActive: { type : Boolean, default : true }\n});\n\n\nSurveySchema.set('toJSON', {\n  transform: function (doc, ret) {\n    delete ret._id;\n    delete ret.__v;\n  },\n});\n\nconst Survey = mongoose.model('Survey', SurveySchema);\n\n/**\n * Service level class with methods for surveys.\n */\nexport default class SurveyModel {\n    constructor() {\n      this.model = new Model(Survey);\n    }\n    \n    getAll() {\n        return this.model.select({});\n    }\n    \n    create(survey) {\n        return this.model.create(survey);\n    }\n    \n    update(survey) {\n        const criteria = {id: survey.id};\n        delete survey.id;\n        \n        const update = survey;\n        return this.model.update(criteria, update);\n    }\n    \n    remove(id) {\n        const criteria = {id};\n        return this.model.remove(criteria);\n    }\n    \n    activate(data) {\n        const criteria = {id: data.id};\n        const update = {isActive: data.isActive};\n        return this.model.update(criteria, update);\n    }\n    \n}\n\n"]}